---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/385128/reviews?api_key=<DONT_SHARE_MY_TMDB_KEY>
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.4.1
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Fri, 22 Oct 2021 11:08:14 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=28800
      X-Memc:
      - HIT
      X-Memc-Key:
      - 493b3efc6440f6763f205a1ae3b43a0222de233f
      X-Memc-Age:
      - '14776'
      X-Memc-Expires:
      - '2211'
      Etag:
      - W/"78c255e1b4bfc81a1e470ef05c055ac1"
      Vary:
      - Accept-Encoding
      X-Cache:
      - Miss from cloudfront
      Via:
      - 1.1 e1b5abb53c407f0a057625c46693461d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - DEN50-C2
      X-Amz-Cf-Id:
      - z1ji77I-1TmtXNYcs472dFiD54FJNu9qBmNpXJBvtfExmy-JnUgORw==
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Fri, 22 Oct 2021 11:08:14 GMT
recorded_with: VCR 6.0.0
